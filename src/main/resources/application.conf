# Akka version, checked against the runtime version of Akka. Loaded from generated conf file.
include "version"

akka {

  http {
    server {
      request-timeout = 10s
      remote-address-header = on
//      default-host-header = ""
      idle-timeout = 5s
    }

    client {
      connecting-timeout = 10s
      idle-timeout = 5s
    }

    parsing {
      max-content-length = 1m
    }
  }

  log-dead-letters = off

  log-dead-letters-during-shutdown = off

  # Home directory of Akka, modules in the deploy directory will be loaded
  home = ""

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  //  event-handlers = [“akka.event.slf4j.Slf4jEventHandler”]
  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  //  # Log level for the very basic logger activated during ActorSystem startup.
  //  # This logger prints the log messages to stdout (System.out).
  //  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"
  //
  //  # Filter of log events that is used by the LoggingAdapter before
  //  # publishing log events to the eventStream.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  //-- for DEBUG only
//  actor {
//    debug {
//      receive = on
//      autoreceive = on
//      lifecycle = on
//    }
//  }

  //-- 2018/7/25, akka quartz scheduler
  quartz {
    schedules {
      Every30Seconds {
        expression = "*/30 * * ? * *"
      }
      Every1Minute {
        expression = "0 0/1 * ? * *"
      }
      Every2Minutes {
        expression = "0 0/2 * ? * *"
      }
      Every3Minutes {
        expression = "0 0/3 * ? * *"
      }
      Every5Minutes {
        expression = "0 0/5 * ? * *"
      }
    }

    threadPool {
      threadCount = 5
      threadPriority = 7
    }
  }
}

server-ip = "0.0.0.0"
server-port = 7000


collector {
  //-----------------------------------------
  //-- consumer on collector machine
  consumer {
//    # collector_topic = wifi_analyzer
//    collector_topic = "test-topic-collector"
//    collector_topic = "topic-wifi-data-trial"
    collector_topic = "topic-wifi-data-trial"

//    # collector_group = wifi_analyzer_grp
//    collector_group = "test-group-collector-2"
//    collector_group = "group-wifi-data-trial"
    collector_group = "group-wifi-data-trial-product"

    # collector_topic = wifi_analyzer
//    collector_topic = "topic-collector-poc"

    # collector_group = wifi_analyzer_grp
//    collector_group = "group-collector-poc-2"


    # collector_broker_info = localhost:9092
//    collector_broker_info = "192.168.0.181:9092"
//    collector_broker_info = "125.132.191.37:9092"
//    collector_broker_info = "192.168.0.181:9092"
    collector_broker_info = "211.43.12.68:9092"

    # collector_cluster_info = localhost:2181
//    collector_cluster_info = "192.168.0.181:2181"
//    collector_cluster_info = "125.132.191.37:2181"
//    collector_cluster_info = "192.168.0.181:2181"
    collector_cluster_info = "211.43.12.68:2181"

    collector_lock_file = "/tmp/lock_collector"

    consumer_count = 10
  }

  //-----------------------------------------
  //-- producers to analyzer machine
  producer {
    analyzer_topic = "topic-analyzer-trial"
//    analyzer_topic = "topic-analyzer-poc"
//    analyzer_broker_info = localhost:9092
//    analyzer_broker_info = "192.168.0.181:9092"
//    analyzer_broker_info = "125.132.191.37:9092"
    analyzer_broker_info = "211.43.12.68:9093"

    #-- all, 1, 0
    analyzer_acks = 1

    #-- 2018/8/29, ADDED a new topic - device-log
    device_log_topic = "topic-device-log-trial"

  }

  //-----------------------------------------
  //-- redis server
  redis_server = {
    redis_server_ip = "localhost"
  }

  //-----------------------------------------
  //-- API server
  //  api_service = {
  //    server_ip_port = "localhost:9000"
  //    station_layout_info_url = "StationLayoutInfo"
  //  }
  //  api_service = {
  //    server_ip_port = "125.132.191.37:9000"
  //    station_layout_info_url = "StationLayoutInfo"
  //  }
    api_service = {
      server_ip_port = "211.43.12.68:9000"
      station_layout_info_url = "StationLayoutInfo"
    }

  #---------------------------------------
  # other settings
  #---------------------------------------
  //  #-- turkey: utc + 3
  //  #-- server_machine: utc + 0, turkey: timezone_delta = 3
  //  # timezone_delta = 3
  //
  //  #-- local_machine: utc + 9, --> turkey: timezone_delta = -6
  timezone_delta = -9

  #-- DEBUG/Local Dev --------------------------
  #-- wifi-receiver-time --> LocalDateTime (
  #-- utc+3(turkey) --> Korea Time (-6) -3 === -9
  adjust_sensor_time_delta = 0

  #-- DEBUG/Local Dev ---------------------------
  #-- current time (LocalDateTime)
  #-- utc+3 --> -6 (Korean Time)
  debug_timezone_delta = -6
}

mysqlSlick {
  driver = "slick.driver.MySQLDriver$"
  //  dataSourceClass = "org.mariadb.jdbc.MySQLDataSource"
  dataSourceClass = "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
  properties = {
    url = "jdbc:mysql://61.84.12.26:3306/wifi_scanner?"
    serverName="61.84.12.26"
    databaseName = "wifi_scanner"
    user = "root"
    password = "uni123"
  }
  minConnections = 10
  maxConnections = 30
  numThreads = 20
}

#---------------------------------------------------------
# MetroBus Trial - KT Clound Testbed
#---------------------------------------------------------
mariaDB {
  driver = "slick.driver.MySQLDriver$"
  dataSourceClass = "org.mariadb.jdbc.MySQLDataSource"
  db = {
    dataSourceClass = "org.mariadb.jdbc.MySQLDataSource"
    url = "jdbc:mariadb://192.168.0.181:3306/metro_istanbul"
    serverName="192.168.0.181"
    databaseName = "metro_istanbul"
    user = "root"
    password = "uni*2017"
//    password = "uni123"
    useServerPrepStmts="true"
    useFractionalSeconds="true"
  }
  minConnections = 10
  maxConnections = 30
  numThreads = 20
}

//#---------------------------------------------------------
//# MetroBus PoC box
//#---------------------------------------------------------
//mariaDB {
//  driver = "slick.driver.MySQLDriver$"
//  dataSourceClass = "org.mariadb.jdbc.MySQLDataSource"
//  db = {
//    dataSourceClass = "org.mariadb.jdbc.MySQLDataSource"
//    //    url = "jdbc:mariadb://192.168.0.12:3306/metro_istanbul"
//    //    serverName="192.168.0.12"
//    url = "jdbc:mariadb://125.132.191.37:3306/metro_istanbul"
//    serverName="125.132.191.37"
//    databaseName = "metro_istanbul"
//    user = "root"
//    //    password = "uni*2017"
//    password = "uni123"
//    useServerPrepStmts="true"
//    useFractionalSeconds="true"
//  }
//  minConnections = 10
//  maxConnections = 30
//  numThreads = 20
//}

//mysqlSlick {
//  driver = "slick.driver.MySQLDriver$"
////  dataSourceClass = "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
//  dataSourceClass = "org.mariadb.jdbc.MySQLDataSource"
//  properties = {
//    url = "jdbc:mysql://61.84.12.9:3306/wifi_scanner"
//    serverName="61.84.12.9"
//    databaseName = "wifi_scanner"
//    user = "root"
//    password = "5fgp3h84"
//  }
//  minConnections = 10
//  maxConnections = 20
//  numThreads = 20
//}

//mysql = {
//  dataSourceClass="com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
//  properties {
//    user="root"
//    password="root"
//    databaseName="bank_db"
//    serverName="localhost"
//  }
//  numThreads=10
//}

//mariadb {
//  driver = "slick.driver.MySQLDriver$"
//
//  db {
//    url = "jdbc:mysql://localhost:3306/test?user=root&password=password"
//    driver = com.mysql.jdbc.Driver
//    maxThreads = 10
//  }
//}